/*
 * TVDB API V4
 * Documentation of [TheTVDB](https://thetvdb.com/) API V4. All related information is linked from our [Github repo](https://github.com/thetvdb/v4-api). You might also want to use our [Postman collection] (https://www.getpostman.com/collections/7a9397ce69ff246f74d0) ## Authentication 1. Use the /login endpoint and provide your API key as \"apikey\". If you have a user-supported key, also provide your subscriber PIN as \"pin\". Otherwise completely remove \"pin\" from your call. 2. Executing this call will provide you with a bearer token, which is valid for 1 month. 3. Provide your bearer token for subsequent API calls by clicking Authorize below or including in the header of all direct API calls: `Authorization: Bearer [your-token]`  ## Notes 1. \"score\" is a field across almost all entities.  We generate scores for different types of entities in various ways, so no assumptions should be made about the meaning of this value.  It is simply used to hint at relative popularity for sorting purposes. 
 *
 * OpenAPI spec version: 4.7.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amilesend.tvdb.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.amilesend.tvdb.client.model.AwardBaseRecord;
import com.amilesend.tvdb.client.model.AwardNomineeBaseRecord;
import com.amilesend.tvdb.client.model.Character;
import com.amilesend.tvdb.client.model.Company;
import com.amilesend.tvdb.client.model.ContentRating;
import com.amilesend.tvdb.client.model.RemoteID;
import com.amilesend.tvdb.client.model.SeasonBaseRecord;
import com.amilesend.tvdb.client.model.TagOption;
import com.amilesend.tvdb.client.model.Trailer;
import com.amilesend.tvdb.client.model.TranslationExtended;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * extended episode record
 */
@Schema(description = "extended episode record")


public class EpisodeExtendedRecord {
  @SerializedName("aired")
  private String aired = null;

  @SerializedName("airsAfterSeason")
  private Integer airsAfterSeason = null;

  @SerializedName("airsBeforeEpisode")
  private Integer airsBeforeEpisode = null;

  @SerializedName("airsBeforeSeason")
  private Integer airsBeforeSeason = null;

  @SerializedName("awards")
  private List<AwardBaseRecord> awards = null;

  @SerializedName("characters")
  private List<Character> characters = null;

  @SerializedName("companies")
  private List<Company> companies = null;

  @SerializedName("contentRatings")
  private List<ContentRating> contentRatings = null;

  @SerializedName("finaleType")
  private String finaleType = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("image")
  private String image = null;

  @SerializedName("imageType")
  private Integer imageType = null;

  @SerializedName("isMovie")
  private Long isMovie = null;

  @SerializedName("lastUpdated")
  private String lastUpdated = null;

  @SerializedName("linkedMovie")
  private Integer linkedMovie = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("nameTranslations")
  private List<String> nameTranslations = null;

  @SerializedName("networks")
  private List<Company> networks = null;

  @SerializedName("nominations")
  private List<AwardNomineeBaseRecord> nominations = null;

  @SerializedName("number")
  private Integer number = null;

  @SerializedName("overview")
  private String overview = null;

  @SerializedName("overviewTranslations")
  private List<String> overviewTranslations = null;

  @SerializedName("productionCode")
  private String productionCode = null;

  @SerializedName("remoteIds")
  private List<RemoteID> remoteIds = null;

  @SerializedName("runtime")
  private Integer runtime = null;

  @SerializedName("seasonNumber")
  private Integer seasonNumber = null;

  @SerializedName("seasons")
  private List<SeasonBaseRecord> seasons = null;

  @SerializedName("seriesId")
  private Long seriesId = null;

  @SerializedName("studios")
  private List<Company> studios = null;

  @SerializedName("tagOptions")
  private List<TagOption> tagOptions = null;

  @SerializedName("trailers")
  private List<Trailer> trailers = null;

  @SerializedName("translations")
  private TranslationExtended translations = null;

  @SerializedName("year")
  private String year = null;

  public EpisodeExtendedRecord aired(String aired) {
    this.aired = aired;
    return this;
  }

   /**
   * Get aired
   * @return aired
  **/
  @Schema(description = "")
  public String getAired() {
    return aired;
  }

  public void setAired(String aired) {
    this.aired = aired;
  }

  public EpisodeExtendedRecord airsAfterSeason(Integer airsAfterSeason) {
    this.airsAfterSeason = airsAfterSeason;
    return this;
  }

   /**
   * Get airsAfterSeason
   * @return airsAfterSeason
  **/
  @Schema(description = "")
  public Integer getAirsAfterSeason() {
    return airsAfterSeason;
  }

  public void setAirsAfterSeason(Integer airsAfterSeason) {
    this.airsAfterSeason = airsAfterSeason;
  }

  public EpisodeExtendedRecord airsBeforeEpisode(Integer airsBeforeEpisode) {
    this.airsBeforeEpisode = airsBeforeEpisode;
    return this;
  }

   /**
   * Get airsBeforeEpisode
   * @return airsBeforeEpisode
  **/
  @Schema(description = "")
  public Integer getAirsBeforeEpisode() {
    return airsBeforeEpisode;
  }

  public void setAirsBeforeEpisode(Integer airsBeforeEpisode) {
    this.airsBeforeEpisode = airsBeforeEpisode;
  }

  public EpisodeExtendedRecord airsBeforeSeason(Integer airsBeforeSeason) {
    this.airsBeforeSeason = airsBeforeSeason;
    return this;
  }

   /**
   * Get airsBeforeSeason
   * @return airsBeforeSeason
  **/
  @Schema(description = "")
  public Integer getAirsBeforeSeason() {
    return airsBeforeSeason;
  }

  public void setAirsBeforeSeason(Integer airsBeforeSeason) {
    this.airsBeforeSeason = airsBeforeSeason;
  }

  public EpisodeExtendedRecord awards(List<AwardBaseRecord> awards) {
    this.awards = awards;
    return this;
  }

  public EpisodeExtendedRecord addAwardsItem(AwardBaseRecord awardsItem) {
    if (this.awards == null) {
      this.awards = new ArrayList<AwardBaseRecord>();
    }
    this.awards.add(awardsItem);
    return this;
  }

   /**
   * Get awards
   * @return awards
  **/
  @Schema(description = "")
  public List<AwardBaseRecord> getAwards() {
    return awards;
  }

  public void setAwards(List<AwardBaseRecord> awards) {
    this.awards = awards;
  }

  public EpisodeExtendedRecord characters(List<Character> characters) {
    this.characters = characters;
    return this;
  }

  public EpisodeExtendedRecord addCharactersItem(Character charactersItem) {
    if (this.characters == null) {
      this.characters = new ArrayList<Character>();
    }
    this.characters.add(charactersItem);
    return this;
  }

   /**
   * Get characters
   * @return characters
  **/
  @Schema(description = "")
  public List<Character> getCharacters() {
    return characters;
  }

  public void setCharacters(List<Character> characters) {
    this.characters = characters;
  }

  public EpisodeExtendedRecord companies(List<Company> companies) {
    this.companies = companies;
    return this;
  }

  public EpisodeExtendedRecord addCompaniesItem(Company companiesItem) {
    if (this.companies == null) {
      this.companies = new ArrayList<Company>();
    }
    this.companies.add(companiesItem);
    return this;
  }

   /**
   * Get companies
   * @return companies
  **/
  @Schema(description = "")
  public List<Company> getCompanies() {
    return companies;
  }

  public void setCompanies(List<Company> companies) {
    this.companies = companies;
  }

  public EpisodeExtendedRecord contentRatings(List<ContentRating> contentRatings) {
    this.contentRatings = contentRatings;
    return this;
  }

  public EpisodeExtendedRecord addContentRatingsItem(ContentRating contentRatingsItem) {
    if (this.contentRatings == null) {
      this.contentRatings = new ArrayList<ContentRating>();
    }
    this.contentRatings.add(contentRatingsItem);
    return this;
  }

   /**
   * Get contentRatings
   * @return contentRatings
  **/
  @Schema(description = "")
  public List<ContentRating> getContentRatings() {
    return contentRatings;
  }

  public void setContentRatings(List<ContentRating> contentRatings) {
    this.contentRatings = contentRatings;
  }

  public EpisodeExtendedRecord finaleType(String finaleType) {
    this.finaleType = finaleType;
    return this;
  }

   /**
   * season, midseason, or series
   * @return finaleType
  **/
  @Schema(description = "season, midseason, or series")
  public String getFinaleType() {
    return finaleType;
  }

  public void setFinaleType(String finaleType) {
    this.finaleType = finaleType;
  }

  public EpisodeExtendedRecord id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public EpisodeExtendedRecord image(String image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @Schema(description = "")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }

  public EpisodeExtendedRecord imageType(Integer imageType) {
    this.imageType = imageType;
    return this;
  }

   /**
   * Get imageType
   * @return imageType
  **/
  @Schema(description = "")
  public Integer getImageType() {
    return imageType;
  }

  public void setImageType(Integer imageType) {
    this.imageType = imageType;
  }

  public EpisodeExtendedRecord isMovie(Long isMovie) {
    this.isMovie = isMovie;
    return this;
  }

   /**
   * Get isMovie
   * @return isMovie
  **/
  @Schema(description = "")
  public Long getIsMovie() {
    return isMovie;
  }

  public void setIsMovie(Long isMovie) {
    this.isMovie = isMovie;
  }

  public EpisodeExtendedRecord lastUpdated(String lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * Get lastUpdated
   * @return lastUpdated
  **/
  @Schema(description = "")
  public String getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(String lastUpdated) {
    this.lastUpdated = lastUpdated;
  }

  public EpisodeExtendedRecord linkedMovie(Integer linkedMovie) {
    this.linkedMovie = linkedMovie;
    return this;
  }

   /**
   * Get linkedMovie
   * @return linkedMovie
  **/
  @Schema(description = "")
  public Integer getLinkedMovie() {
    return linkedMovie;
  }

  public void setLinkedMovie(Integer linkedMovie) {
    this.linkedMovie = linkedMovie;
  }

  public EpisodeExtendedRecord name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public EpisodeExtendedRecord nameTranslations(List<String> nameTranslations) {
    this.nameTranslations = nameTranslations;
    return this;
  }

  public EpisodeExtendedRecord addNameTranslationsItem(String nameTranslationsItem) {
    if (this.nameTranslations == null) {
      this.nameTranslations = new ArrayList<String>();
    }
    this.nameTranslations.add(nameTranslationsItem);
    return this;
  }

   /**
   * Get nameTranslations
   * @return nameTranslations
  **/
  @Schema(description = "")
  public List<String> getNameTranslations() {
    return nameTranslations;
  }

  public void setNameTranslations(List<String> nameTranslations) {
    this.nameTranslations = nameTranslations;
  }

  public EpisodeExtendedRecord networks(List<Company> networks) {
    this.networks = networks;
    return this;
  }

  public EpisodeExtendedRecord addNetworksItem(Company networksItem) {
    if (this.networks == null) {
      this.networks = new ArrayList<Company>();
    }
    this.networks.add(networksItem);
    return this;
  }

   /**
   * Get networks
   * @return networks
  **/
  @Schema(description = "")
  public List<Company> getNetworks() {
    return networks;
  }

  public void setNetworks(List<Company> networks) {
    this.networks = networks;
  }

  public EpisodeExtendedRecord nominations(List<AwardNomineeBaseRecord> nominations) {
    this.nominations = nominations;
    return this;
  }

  public EpisodeExtendedRecord addNominationsItem(AwardNomineeBaseRecord nominationsItem) {
    if (this.nominations == null) {
      this.nominations = new ArrayList<AwardNomineeBaseRecord>();
    }
    this.nominations.add(nominationsItem);
    return this;
  }

   /**
   * Get nominations
   * @return nominations
  **/
  @Schema(description = "")
  public List<AwardNomineeBaseRecord> getNominations() {
    return nominations;
  }

  public void setNominations(List<AwardNomineeBaseRecord> nominations) {
    this.nominations = nominations;
  }

  public EpisodeExtendedRecord number(Integer number) {
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @Schema(description = "")
  public Integer getNumber() {
    return number;
  }

  public void setNumber(Integer number) {
    this.number = number;
  }

  public EpisodeExtendedRecord overview(String overview) {
    this.overview = overview;
    return this;
  }

   /**
   * Get overview
   * @return overview
  **/
  @Schema(description = "")
  public String getOverview() {
    return overview;
  }

  public void setOverview(String overview) {
    this.overview = overview;
  }

  public EpisodeExtendedRecord overviewTranslations(List<String> overviewTranslations) {
    this.overviewTranslations = overviewTranslations;
    return this;
  }

  public EpisodeExtendedRecord addOverviewTranslationsItem(String overviewTranslationsItem) {
    if (this.overviewTranslations == null) {
      this.overviewTranslations = new ArrayList<String>();
    }
    this.overviewTranslations.add(overviewTranslationsItem);
    return this;
  }

   /**
   * Get overviewTranslations
   * @return overviewTranslations
  **/
  @Schema(description = "")
  public List<String> getOverviewTranslations() {
    return overviewTranslations;
  }

  public void setOverviewTranslations(List<String> overviewTranslations) {
    this.overviewTranslations = overviewTranslations;
  }

  public EpisodeExtendedRecord productionCode(String productionCode) {
    this.productionCode = productionCode;
    return this;
  }

   /**
   * Get productionCode
   * @return productionCode
  **/
  @Schema(description = "")
  public String getProductionCode() {
    return productionCode;
  }

  public void setProductionCode(String productionCode) {
    this.productionCode = productionCode;
  }

  public EpisodeExtendedRecord remoteIds(List<RemoteID> remoteIds) {
    this.remoteIds = remoteIds;
    return this;
  }

  public EpisodeExtendedRecord addRemoteIdsItem(RemoteID remoteIdsItem) {
    if (this.remoteIds == null) {
      this.remoteIds = new ArrayList<RemoteID>();
    }
    this.remoteIds.add(remoteIdsItem);
    return this;
  }

   /**
   * Get remoteIds
   * @return remoteIds
  **/
  @Schema(description = "")
  public List<RemoteID> getRemoteIds() {
    return remoteIds;
  }

  public void setRemoteIds(List<RemoteID> remoteIds) {
    this.remoteIds = remoteIds;
  }

  public EpisodeExtendedRecord runtime(Integer runtime) {
    this.runtime = runtime;
    return this;
  }

   /**
   * Get runtime
   * @return runtime
  **/
  @Schema(description = "")
  public Integer getRuntime() {
    return runtime;
  }

  public void setRuntime(Integer runtime) {
    this.runtime = runtime;
  }

  public EpisodeExtendedRecord seasonNumber(Integer seasonNumber) {
    this.seasonNumber = seasonNumber;
    return this;
  }

   /**
   * Get seasonNumber
   * @return seasonNumber
  **/
  @Schema(description = "")
  public Integer getSeasonNumber() {
    return seasonNumber;
  }

  public void setSeasonNumber(Integer seasonNumber) {
    this.seasonNumber = seasonNumber;
  }

  public EpisodeExtendedRecord seasons(List<SeasonBaseRecord> seasons) {
    this.seasons = seasons;
    return this;
  }

  public EpisodeExtendedRecord addSeasonsItem(SeasonBaseRecord seasonsItem) {
    if (this.seasons == null) {
      this.seasons = new ArrayList<SeasonBaseRecord>();
    }
    this.seasons.add(seasonsItem);
    return this;
  }

   /**
   * Get seasons
   * @return seasons
  **/
  @Schema(description = "")
  public List<SeasonBaseRecord> getSeasons() {
    return seasons;
  }

  public void setSeasons(List<SeasonBaseRecord> seasons) {
    this.seasons = seasons;
  }

  public EpisodeExtendedRecord seriesId(Long seriesId) {
    this.seriesId = seriesId;
    return this;
  }

   /**
   * Get seriesId
   * @return seriesId
  **/
  @Schema(description = "")
  public Long getSeriesId() {
    return seriesId;
  }

  public void setSeriesId(Long seriesId) {
    this.seriesId = seriesId;
  }

  public EpisodeExtendedRecord studios(List<Company> studios) {
    this.studios = studios;
    return this;
  }

  public EpisodeExtendedRecord addStudiosItem(Company studiosItem) {
    if (this.studios == null) {
      this.studios = new ArrayList<Company>();
    }
    this.studios.add(studiosItem);
    return this;
  }

   /**
   * Get studios
   * @return studios
  **/
  @Schema(description = "")
  public List<Company> getStudios() {
    return studios;
  }

  public void setStudios(List<Company> studios) {
    this.studios = studios;
  }

  public EpisodeExtendedRecord tagOptions(List<TagOption> tagOptions) {
    this.tagOptions = tagOptions;
    return this;
  }

  public EpisodeExtendedRecord addTagOptionsItem(TagOption tagOptionsItem) {
    if (this.tagOptions == null) {
      this.tagOptions = new ArrayList<TagOption>();
    }
    this.tagOptions.add(tagOptionsItem);
    return this;
  }

   /**
   * Get tagOptions
   * @return tagOptions
  **/
  @Schema(description = "")
  public List<TagOption> getTagOptions() {
    return tagOptions;
  }

  public void setTagOptions(List<TagOption> tagOptions) {
    this.tagOptions = tagOptions;
  }

  public EpisodeExtendedRecord trailers(List<Trailer> trailers) {
    this.trailers = trailers;
    return this;
  }

  public EpisodeExtendedRecord addTrailersItem(Trailer trailersItem) {
    if (this.trailers == null) {
      this.trailers = new ArrayList<Trailer>();
    }
    this.trailers.add(trailersItem);
    return this;
  }

   /**
   * Get trailers
   * @return trailers
  **/
  @Schema(description = "")
  public List<Trailer> getTrailers() {
    return trailers;
  }

  public void setTrailers(List<Trailer> trailers) {
    this.trailers = trailers;
  }

  public EpisodeExtendedRecord translations(TranslationExtended translations) {
    this.translations = translations;
    return this;
  }

   /**
   * Get translations
   * @return translations
  **/
  @Schema(description = "")
  public TranslationExtended getTranslations() {
    return translations;
  }

  public void setTranslations(TranslationExtended translations) {
    this.translations = translations;
  }

  public EpisodeExtendedRecord year(String year) {
    this.year = year;
    return this;
  }

   /**
   * Get year
   * @return year
  **/
  @Schema(description = "")
  public String getYear() {
    return year;
  }

  public void setYear(String year) {
    this.year = year;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EpisodeExtendedRecord episodeExtendedRecord = (EpisodeExtendedRecord) o;
    return Objects.equals(this.aired, episodeExtendedRecord.aired) &&
        Objects.equals(this.airsAfterSeason, episodeExtendedRecord.airsAfterSeason) &&
        Objects.equals(this.airsBeforeEpisode, episodeExtendedRecord.airsBeforeEpisode) &&
        Objects.equals(this.airsBeforeSeason, episodeExtendedRecord.airsBeforeSeason) &&
        Objects.equals(this.awards, episodeExtendedRecord.awards) &&
        Objects.equals(this.characters, episodeExtendedRecord.characters) &&
        Objects.equals(this.companies, episodeExtendedRecord.companies) &&
        Objects.equals(this.contentRatings, episodeExtendedRecord.contentRatings) &&
        Objects.equals(this.finaleType, episodeExtendedRecord.finaleType) &&
        Objects.equals(this.id, episodeExtendedRecord.id) &&
        Objects.equals(this.image, episodeExtendedRecord.image) &&
        Objects.equals(this.imageType, episodeExtendedRecord.imageType) &&
        Objects.equals(this.isMovie, episodeExtendedRecord.isMovie) &&
        Objects.equals(this.lastUpdated, episodeExtendedRecord.lastUpdated) &&
        Objects.equals(this.linkedMovie, episodeExtendedRecord.linkedMovie) &&
        Objects.equals(this.name, episodeExtendedRecord.name) &&
        Objects.equals(this.nameTranslations, episodeExtendedRecord.nameTranslations) &&
        Objects.equals(this.networks, episodeExtendedRecord.networks) &&
        Objects.equals(this.nominations, episodeExtendedRecord.nominations) &&
        Objects.equals(this.number, episodeExtendedRecord.number) &&
        Objects.equals(this.overview, episodeExtendedRecord.overview) &&
        Objects.equals(this.overviewTranslations, episodeExtendedRecord.overviewTranslations) &&
        Objects.equals(this.productionCode, episodeExtendedRecord.productionCode) &&
        Objects.equals(this.remoteIds, episodeExtendedRecord.remoteIds) &&
        Objects.equals(this.runtime, episodeExtendedRecord.runtime) &&
        Objects.equals(this.seasonNumber, episodeExtendedRecord.seasonNumber) &&
        Objects.equals(this.seasons, episodeExtendedRecord.seasons) &&
        Objects.equals(this.seriesId, episodeExtendedRecord.seriesId) &&
        Objects.equals(this.studios, episodeExtendedRecord.studios) &&
        Objects.equals(this.tagOptions, episodeExtendedRecord.tagOptions) &&
        Objects.equals(this.trailers, episodeExtendedRecord.trailers) &&
        Objects.equals(this.translations, episodeExtendedRecord.translations) &&
        Objects.equals(this.year, episodeExtendedRecord.year);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aired, airsAfterSeason, airsBeforeEpisode, airsBeforeSeason, awards, characters, companies, contentRatings, finaleType, id, image, imageType, isMovie, lastUpdated, linkedMovie, name, nameTranslations, networks, nominations, number, overview, overviewTranslations, productionCode, remoteIds, runtime, seasonNumber, seasons, seriesId, studios, tagOptions, trailers, translations, year);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EpisodeExtendedRecord {\n");
    
    sb.append("    aired: ").append(toIndentedString(aired)).append("\n");
    sb.append("    airsAfterSeason: ").append(toIndentedString(airsAfterSeason)).append("\n");
    sb.append("    airsBeforeEpisode: ").append(toIndentedString(airsBeforeEpisode)).append("\n");
    sb.append("    airsBeforeSeason: ").append(toIndentedString(airsBeforeSeason)).append("\n");
    sb.append("    awards: ").append(toIndentedString(awards)).append("\n");
    sb.append("    characters: ").append(toIndentedString(characters)).append("\n");
    sb.append("    companies: ").append(toIndentedString(companies)).append("\n");
    sb.append("    contentRatings: ").append(toIndentedString(contentRatings)).append("\n");
    sb.append("    finaleType: ").append(toIndentedString(finaleType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    imageType: ").append(toIndentedString(imageType)).append("\n");
    sb.append("    isMovie: ").append(toIndentedString(isMovie)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    linkedMovie: ").append(toIndentedString(linkedMovie)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameTranslations: ").append(toIndentedString(nameTranslations)).append("\n");
    sb.append("    networks: ").append(toIndentedString(networks)).append("\n");
    sb.append("    nominations: ").append(toIndentedString(nominations)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    overview: ").append(toIndentedString(overview)).append("\n");
    sb.append("    overviewTranslations: ").append(toIndentedString(overviewTranslations)).append("\n");
    sb.append("    productionCode: ").append(toIndentedString(productionCode)).append("\n");
    sb.append("    remoteIds: ").append(toIndentedString(remoteIds)).append("\n");
    sb.append("    runtime: ").append(toIndentedString(runtime)).append("\n");
    sb.append("    seasonNumber: ").append(toIndentedString(seasonNumber)).append("\n");
    sb.append("    seasons: ").append(toIndentedString(seasons)).append("\n");
    sb.append("    seriesId: ").append(toIndentedString(seriesId)).append("\n");
    sb.append("    studios: ").append(toIndentedString(studios)).append("\n");
    sb.append("    tagOptions: ").append(toIndentedString(tagOptions)).append("\n");
    sb.append("    trailers: ").append(toIndentedString(trailers)).append("\n");
    sb.append("    translations: ").append(toIndentedString(translations)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
