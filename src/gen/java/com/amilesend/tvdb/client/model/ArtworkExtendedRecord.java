/*
 * TVDB API V4
 * Documentation of [TheTVDB](https://thetvdb.com/) API V4. All related information is linked from our [Github repo](https://github.com/thetvdb/v4-api). You might also want to use our [Postman collection] (https://www.getpostman.com/collections/7a9397ce69ff246f74d0) ## Authentication 1. Use the /login endpoint and provide your API key as \"apikey\". If you have a user-supported key, also provide your subscriber PIN as \"pin\". Otherwise completely remove \"pin\" from your call. 2. Executing this call will provide you with a bearer token, which is valid for 1 month. 3. Provide your bearer token for subsequent API calls by clicking Authorize below or including in the header of all direct API calls: `Authorization: Bearer [your-token]`  ## Notes 1. \"score\" is a field across almost all entities.  We generate scores for different types of entities in various ways, so no assumptions should be made about the meaning of this value.  It is simply used to hint at relative popularity for sorting purposes. 
 *
 * OpenAPI spec version: 4.7.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amilesend.tvdb.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.amilesend.tvdb.client.model.ArtworkStatus;
import com.amilesend.tvdb.client.model.TagOption;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * extended artwork record
 */
@Schema(description = "extended artwork record")


public class ArtworkExtendedRecord {
  @SerializedName("episodeId")
  private Integer episodeId = null;

  @SerializedName("height")
  private Long height = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("image")
  private String image = null;

  @SerializedName("includesText")
  private Boolean includesText = null;

  @SerializedName("language")
  private String language = null;

  @SerializedName("movieId")
  private Integer movieId = null;

  @SerializedName("networkId")
  private Integer networkId = null;

  @SerializedName("peopleId")
  private Integer peopleId = null;

  @SerializedName("score")
  private BigDecimal score = null;

  @SerializedName("seasonId")
  private Integer seasonId = null;

  @SerializedName("seriesId")
  private Integer seriesId = null;

  @SerializedName("seriesPeopleId")
  private Integer seriesPeopleId = null;

  @SerializedName("status")
  private ArtworkStatus status = null;

  @SerializedName("tagOptions")
  private List<TagOption> tagOptions = null;

  @SerializedName("thumbnail")
  private String thumbnail = null;

  @SerializedName("thumbnailHeight")
  private Long thumbnailHeight = null;

  @SerializedName("thumbnailWidth")
  private Long thumbnailWidth = null;

  @SerializedName("type")
  private Long type = null;

  @SerializedName("updatedAt")
  private Long updatedAt = null;

  @SerializedName("width")
  private Long width = null;

  public ArtworkExtendedRecord episodeId(Integer episodeId) {
    this.episodeId = episodeId;
    return this;
  }

   /**
   * Get episodeId
   * @return episodeId
  **/
  @Schema(description = "")
  public Integer getEpisodeId() {
    return episodeId;
  }

  public void setEpisodeId(Integer episodeId) {
    this.episodeId = episodeId;
  }

  public ArtworkExtendedRecord height(Long height) {
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @Schema(description = "")
  public Long getHeight() {
    return height;
  }

  public void setHeight(Long height) {
    this.height = height;
  }

  public ArtworkExtendedRecord id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ArtworkExtendedRecord image(String image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @Schema(description = "")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }

  public ArtworkExtendedRecord includesText(Boolean includesText) {
    this.includesText = includesText;
    return this;
  }

   /**
   * Get includesText
   * @return includesText
  **/
  @Schema(description = "")
  public Boolean isIncludesText() {
    return includesText;
  }

  public void setIncludesText(Boolean includesText) {
    this.includesText = includesText;
  }

  public ArtworkExtendedRecord language(String language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @Schema(description = "")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public ArtworkExtendedRecord movieId(Integer movieId) {
    this.movieId = movieId;
    return this;
  }

   /**
   * Get movieId
   * @return movieId
  **/
  @Schema(description = "")
  public Integer getMovieId() {
    return movieId;
  }

  public void setMovieId(Integer movieId) {
    this.movieId = movieId;
  }

  public ArtworkExtendedRecord networkId(Integer networkId) {
    this.networkId = networkId;
    return this;
  }

   /**
   * Get networkId
   * @return networkId
  **/
  @Schema(description = "")
  public Integer getNetworkId() {
    return networkId;
  }

  public void setNetworkId(Integer networkId) {
    this.networkId = networkId;
  }

  public ArtworkExtendedRecord peopleId(Integer peopleId) {
    this.peopleId = peopleId;
    return this;
  }

   /**
   * Get peopleId
   * @return peopleId
  **/
  @Schema(description = "")
  public Integer getPeopleId() {
    return peopleId;
  }

  public void setPeopleId(Integer peopleId) {
    this.peopleId = peopleId;
  }

  public ArtworkExtendedRecord score(BigDecimal score) {
    this.score = score;
    return this;
  }

   /**
   * Get score
   * @return score
  **/
  @Schema(description = "")
  public BigDecimal getScore() {
    return score;
  }

  public void setScore(BigDecimal score) {
    this.score = score;
  }

  public ArtworkExtendedRecord seasonId(Integer seasonId) {
    this.seasonId = seasonId;
    return this;
  }

   /**
   * Get seasonId
   * @return seasonId
  **/
  @Schema(description = "")
  public Integer getSeasonId() {
    return seasonId;
  }

  public void setSeasonId(Integer seasonId) {
    this.seasonId = seasonId;
  }

  public ArtworkExtendedRecord seriesId(Integer seriesId) {
    this.seriesId = seriesId;
    return this;
  }

   /**
   * Get seriesId
   * @return seriesId
  **/
  @Schema(description = "")
  public Integer getSeriesId() {
    return seriesId;
  }

  public void setSeriesId(Integer seriesId) {
    this.seriesId = seriesId;
  }

  public ArtworkExtendedRecord seriesPeopleId(Integer seriesPeopleId) {
    this.seriesPeopleId = seriesPeopleId;
    return this;
  }

   /**
   * Get seriesPeopleId
   * @return seriesPeopleId
  **/
  @Schema(description = "")
  public Integer getSeriesPeopleId() {
    return seriesPeopleId;
  }

  public void setSeriesPeopleId(Integer seriesPeopleId) {
    this.seriesPeopleId = seriesPeopleId;
  }

  public ArtworkExtendedRecord status(ArtworkStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public ArtworkStatus getStatus() {
    return status;
  }

  public void setStatus(ArtworkStatus status) {
    this.status = status;
  }

  public ArtworkExtendedRecord tagOptions(List<TagOption> tagOptions) {
    this.tagOptions = tagOptions;
    return this;
  }

  public ArtworkExtendedRecord addTagOptionsItem(TagOption tagOptionsItem) {
    if (this.tagOptions == null) {
      this.tagOptions = new ArrayList<TagOption>();
    }
    this.tagOptions.add(tagOptionsItem);
    return this;
  }

   /**
   * Get tagOptions
   * @return tagOptions
  **/
  @Schema(description = "")
  public List<TagOption> getTagOptions() {
    return tagOptions;
  }

  public void setTagOptions(List<TagOption> tagOptions) {
    this.tagOptions = tagOptions;
  }

  public ArtworkExtendedRecord thumbnail(String thumbnail) {
    this.thumbnail = thumbnail;
    return this;
  }

   /**
   * Get thumbnail
   * @return thumbnail
  **/
  @Schema(description = "")
  public String getThumbnail() {
    return thumbnail;
  }

  public void setThumbnail(String thumbnail) {
    this.thumbnail = thumbnail;
  }

  public ArtworkExtendedRecord thumbnailHeight(Long thumbnailHeight) {
    this.thumbnailHeight = thumbnailHeight;
    return this;
  }

   /**
   * Get thumbnailHeight
   * @return thumbnailHeight
  **/
  @Schema(description = "")
  public Long getThumbnailHeight() {
    return thumbnailHeight;
  }

  public void setThumbnailHeight(Long thumbnailHeight) {
    this.thumbnailHeight = thumbnailHeight;
  }

  public ArtworkExtendedRecord thumbnailWidth(Long thumbnailWidth) {
    this.thumbnailWidth = thumbnailWidth;
    return this;
  }

   /**
   * Get thumbnailWidth
   * @return thumbnailWidth
  **/
  @Schema(description = "")
  public Long getThumbnailWidth() {
    return thumbnailWidth;
  }

  public void setThumbnailWidth(Long thumbnailWidth) {
    this.thumbnailWidth = thumbnailWidth;
  }

  public ArtworkExtendedRecord type(Long type) {
    this.type = type;
    return this;
  }

   /**
   * The artwork type corresponds to the ids from the /artwork/types endpoint.
   * @return type
  **/
  @Schema(description = "The artwork type corresponds to the ids from the /artwork/types endpoint.")
  public Long getType() {
    return type;
  }

  public void setType(Long type) {
    this.type = type;
  }

  public ArtworkExtendedRecord updatedAt(Long updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public Long getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(Long updatedAt) {
    this.updatedAt = updatedAt;
  }

  public ArtworkExtendedRecord width(Long width) {
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @Schema(description = "")
  public Long getWidth() {
    return width;
  }

  public void setWidth(Long width) {
    this.width = width;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ArtworkExtendedRecord artworkExtendedRecord = (ArtworkExtendedRecord) o;
    return Objects.equals(this.episodeId, artworkExtendedRecord.episodeId) &&
        Objects.equals(this.height, artworkExtendedRecord.height) &&
        Objects.equals(this.id, artworkExtendedRecord.id) &&
        Objects.equals(this.image, artworkExtendedRecord.image) &&
        Objects.equals(this.includesText, artworkExtendedRecord.includesText) &&
        Objects.equals(this.language, artworkExtendedRecord.language) &&
        Objects.equals(this.movieId, artworkExtendedRecord.movieId) &&
        Objects.equals(this.networkId, artworkExtendedRecord.networkId) &&
        Objects.equals(this.peopleId, artworkExtendedRecord.peopleId) &&
        Objects.equals(this.score, artworkExtendedRecord.score) &&
        Objects.equals(this.seasonId, artworkExtendedRecord.seasonId) &&
        Objects.equals(this.seriesId, artworkExtendedRecord.seriesId) &&
        Objects.equals(this.seriesPeopleId, artworkExtendedRecord.seriesPeopleId) &&
        Objects.equals(this.status, artworkExtendedRecord.status) &&
        Objects.equals(this.tagOptions, artworkExtendedRecord.tagOptions) &&
        Objects.equals(this.thumbnail, artworkExtendedRecord.thumbnail) &&
        Objects.equals(this.thumbnailHeight, artworkExtendedRecord.thumbnailHeight) &&
        Objects.equals(this.thumbnailWidth, artworkExtendedRecord.thumbnailWidth) &&
        Objects.equals(this.type, artworkExtendedRecord.type) &&
        Objects.equals(this.updatedAt, artworkExtendedRecord.updatedAt) &&
        Objects.equals(this.width, artworkExtendedRecord.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(episodeId, height, id, image, includesText, language, movieId, networkId, peopleId, score, seasonId, seriesId, seriesPeopleId, status, tagOptions, thumbnail, thumbnailHeight, thumbnailWidth, type, updatedAt, width);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ArtworkExtendedRecord {\n");
    
    sb.append("    episodeId: ").append(toIndentedString(episodeId)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    includesText: ").append(toIndentedString(includesText)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    movieId: ").append(toIndentedString(movieId)).append("\n");
    sb.append("    networkId: ").append(toIndentedString(networkId)).append("\n");
    sb.append("    peopleId: ").append(toIndentedString(peopleId)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    seasonId: ").append(toIndentedString(seasonId)).append("\n");
    sb.append("    seriesId: ").append(toIndentedString(seriesId)).append("\n");
    sb.append("    seriesPeopleId: ").append(toIndentedString(seriesPeopleId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tagOptions: ").append(toIndentedString(tagOptions)).append("\n");
    sb.append("    thumbnail: ").append(toIndentedString(thumbnail)).append("\n");
    sb.append("    thumbnailHeight: ").append(toIndentedString(thumbnailHeight)).append("\n");
    sb.append("    thumbnailWidth: ").append(toIndentedString(thumbnailWidth)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
