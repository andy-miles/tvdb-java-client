/*
 * TVDB API V4
 * Documentation of [TheTVDB](https://thetvdb.com/) API V4. All related information is linked from our [Github repo](https://github.com/thetvdb/v4-api). You might also want to use our [Postman collection] (https://www.getpostman.com/collections/7a9397ce69ff246f74d0) ## Authentication 1. Use the /login endpoint and provide your API key as \"apikey\". If you have a user-supported key, also provide your subscriber PIN as \"pin\". Otherwise completely remove \"pin\" from your call. 2. Executing this call will provide you with a bearer token, which is valid for 1 month. 3. Provide your bearer token for subsequent API calls by clicking Authorize below or including in the header of all direct API calls: `Authorization: Bearer [your-token]`  ## Notes 1. \"score\" is a field across almost all entities.  We generate scores for different types of entities in various ways, so no assumptions should be made about the meaning of this value.  It is simply used to hint at relative popularity for sorting purposes. 
 *
 * OpenAPI spec version: 4.7.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amilesend.tvdb.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * artwork type record
 */
@Schema(description = "artwork type record")


public class ArtworkType {
  @SerializedName("height")
  private Long height = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("imageFormat")
  private String imageFormat = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("recordType")
  private String recordType = null;

  @SerializedName("slug")
  private String slug = null;

  @SerializedName("thumbHeight")
  private Long thumbHeight = null;

  @SerializedName("thumbWidth")
  private Long thumbWidth = null;

  @SerializedName("width")
  private Long width = null;

  public ArtworkType height(Long height) {
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @Schema(description = "")
  public Long getHeight() {
    return height;
  }

  public void setHeight(Long height) {
    this.height = height;
  }

  public ArtworkType id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ArtworkType imageFormat(String imageFormat) {
    this.imageFormat = imageFormat;
    return this;
  }

   /**
   * Get imageFormat
   * @return imageFormat
  **/
  @Schema(description = "")
  public String getImageFormat() {
    return imageFormat;
  }

  public void setImageFormat(String imageFormat) {
    this.imageFormat = imageFormat;
  }

  public ArtworkType name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ArtworkType recordType(String recordType) {
    this.recordType = recordType;
    return this;
  }

   /**
   * Get recordType
   * @return recordType
  **/
  @Schema(description = "")
  public String getRecordType() {
    return recordType;
  }

  public void setRecordType(String recordType) {
    this.recordType = recordType;
  }

  public ArtworkType slug(String slug) {
    this.slug = slug;
    return this;
  }

   /**
   * Get slug
   * @return slug
  **/
  @Schema(description = "")
  public String getSlug() {
    return slug;
  }

  public void setSlug(String slug) {
    this.slug = slug;
  }

  public ArtworkType thumbHeight(Long thumbHeight) {
    this.thumbHeight = thumbHeight;
    return this;
  }

   /**
   * Get thumbHeight
   * @return thumbHeight
  **/
  @Schema(description = "")
  public Long getThumbHeight() {
    return thumbHeight;
  }

  public void setThumbHeight(Long thumbHeight) {
    this.thumbHeight = thumbHeight;
  }

  public ArtworkType thumbWidth(Long thumbWidth) {
    this.thumbWidth = thumbWidth;
    return this;
  }

   /**
   * Get thumbWidth
   * @return thumbWidth
  **/
  @Schema(description = "")
  public Long getThumbWidth() {
    return thumbWidth;
  }

  public void setThumbWidth(Long thumbWidth) {
    this.thumbWidth = thumbWidth;
  }

  public ArtworkType width(Long width) {
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @Schema(description = "")
  public Long getWidth() {
    return width;
  }

  public void setWidth(Long width) {
    this.width = width;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ArtworkType artworkType = (ArtworkType) o;
    return Objects.equals(this.height, artworkType.height) &&
        Objects.equals(this.id, artworkType.id) &&
        Objects.equals(this.imageFormat, artworkType.imageFormat) &&
        Objects.equals(this.name, artworkType.name) &&
        Objects.equals(this.recordType, artworkType.recordType) &&
        Objects.equals(this.slug, artworkType.slug) &&
        Objects.equals(this.thumbHeight, artworkType.thumbHeight) &&
        Objects.equals(this.thumbWidth, artworkType.thumbWidth) &&
        Objects.equals(this.width, artworkType.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(height, id, imageFormat, name, recordType, slug, thumbHeight, thumbWidth, width);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ArtworkType {\n");
    
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    imageFormat: ").append(toIndentedString(imageFormat)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    thumbHeight: ").append(toIndentedString(thumbHeight)).append("\n");
    sb.append("    thumbWidth: ").append(toIndentedString(thumbWidth)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
