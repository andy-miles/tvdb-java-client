/*
 * TVDB API V4
 * Documentation of [TheTVDB](https://thetvdb.com/) API V4. All related information is linked from our [Github repo](https://github.com/thetvdb/v4-api). You might also want to use our [Postman collection] (https://www.getpostman.com/collections/7a9397ce69ff246f74d0) ## Authentication 1. Use the /login endpoint and provide your API key as \"apikey\". If you have a user-supported key, also provide your subscriber PIN as \"pin\". Otherwise completely remove \"pin\" from your call. 2. Executing this call will provide you with a bearer token, which is valid for 1 month. 3. Provide your bearer token for subsequent API calls by clicking Authorize below or including in the header of all direct API calls: `Authorization: Bearer [your-token]`  ## Notes 1. \"score\" is a field across almost all entities.  We generate scores for different types of entities in various ways, so no assumptions should be made about the meaning of this value.  It is simply used to hint at relative popularity for sorting purposes. 
 *
 * OpenAPI spec version: 4.7.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amilesend.tvdb.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.amilesend.tvdb.client.model.Company;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Companies by type record
 */
@Schema(description = "Companies by type record")


public class Companies {
  @SerializedName("studio")
  private List<Company> studio = null;

  @SerializedName("network")
  private List<Company> network = null;

  @SerializedName("production")
  private List<Company> production = null;

  @SerializedName("distributor")
  private List<Company> distributor = null;

  @SerializedName("special_effects")
  private List<Company> specialEffects = null;

  public Companies studio(List<Company> studio) {
    this.studio = studio;
    return this;
  }

  public Companies addStudioItem(Company studioItem) {
    if (this.studio == null) {
      this.studio = new ArrayList<Company>();
    }
    this.studio.add(studioItem);
    return this;
  }

   /**
   * Get studio
   * @return studio
  **/
  @Schema(description = "")
  public List<Company> getStudio() {
    return studio;
  }

  public void setStudio(List<Company> studio) {
    this.studio = studio;
  }

  public Companies network(List<Company> network) {
    this.network = network;
    return this;
  }

  public Companies addNetworkItem(Company networkItem) {
    if (this.network == null) {
      this.network = new ArrayList<Company>();
    }
    this.network.add(networkItem);
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @Schema(description = "")
  public List<Company> getNetwork() {
    return network;
  }

  public void setNetwork(List<Company> network) {
    this.network = network;
  }

  public Companies production(List<Company> production) {
    this.production = production;
    return this;
  }

  public Companies addProductionItem(Company productionItem) {
    if (this.production == null) {
      this.production = new ArrayList<Company>();
    }
    this.production.add(productionItem);
    return this;
  }

   /**
   * Get production
   * @return production
  **/
  @Schema(description = "")
  public List<Company> getProduction() {
    return production;
  }

  public void setProduction(List<Company> production) {
    this.production = production;
  }

  public Companies distributor(List<Company> distributor) {
    this.distributor = distributor;
    return this;
  }

  public Companies addDistributorItem(Company distributorItem) {
    if (this.distributor == null) {
      this.distributor = new ArrayList<Company>();
    }
    this.distributor.add(distributorItem);
    return this;
  }

   /**
   * Get distributor
   * @return distributor
  **/
  @Schema(description = "")
  public List<Company> getDistributor() {
    return distributor;
  }

  public void setDistributor(List<Company> distributor) {
    this.distributor = distributor;
  }

  public Companies specialEffects(List<Company> specialEffects) {
    this.specialEffects = specialEffects;
    return this;
  }

  public Companies addSpecialEffectsItem(Company specialEffectsItem) {
    if (this.specialEffects == null) {
      this.specialEffects = new ArrayList<Company>();
    }
    this.specialEffects.add(specialEffectsItem);
    return this;
  }

   /**
   * Get specialEffects
   * @return specialEffects
  **/
  @Schema(description = "")
  public List<Company> getSpecialEffects() {
    return specialEffects;
  }

  public void setSpecialEffects(List<Company> specialEffects) {
    this.specialEffects = specialEffects;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Companies companies = (Companies) o;
    return Objects.equals(this.studio, companies.studio) &&
        Objects.equals(this.network, companies.network) &&
        Objects.equals(this.production, companies.production) &&
        Objects.equals(this.distributor, companies.distributor) &&
        Objects.equals(this.specialEffects, companies.specialEffects);
  }

  @Override
  public int hashCode() {
    return Objects.hash(studio, network, production, distributor, specialEffects);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Companies {\n");
    
    sb.append("    studio: ").append(toIndentedString(studio)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    production: ").append(toIndentedString(production)).append("\n");
    sb.append("    distributor: ").append(toIndentedString(distributor)).append("\n");
    sb.append("    specialEffects: ").append(toIndentedString(specialEffects)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
