/*
 * TVDB API V4
 * Documentation of [TheTVDB](https://thetvdb.com/) API V4. All related information is linked from our [Github repo](https://github.com/thetvdb/v4-api). You might also want to use our [Postman collection] (https://www.getpostman.com/collections/7a9397ce69ff246f74d0) ## Authentication 1. Use the /login endpoint and provide your API key as \"apikey\". If you have a user-supported key, also provide your subscriber PIN as \"pin\". Otherwise completely remove \"pin\" from your call. 2. Executing this call will provide you with a bearer token, which is valid for 1 month. 3. Provide your bearer token for subsequent API calls by clicking Authorize below or including in the header of all direct API calls: `Authorization: Bearer [your-token]`  ## Notes 1. \"score\" is a field across almost all entities.  We generate scores for different types of entities in various ways, so no assumptions should be made about the meaning of this value.  It is simply used to hint at relative popularity for sorting purposes. 
 *
 * OpenAPI spec version: 4.7.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amilesend.tvdb.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.amilesend.tvdb.client.model.SeasonBaseRecord;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * base episode record
 */
@Schema(description = "base episode record")


public class EpisodeBaseRecord {
  @SerializedName("absoluteNumber")
  private Integer absoluteNumber = null;

  @SerializedName("aired")
  private String aired = null;

  @SerializedName("airsAfterSeason")
  private Integer airsAfterSeason = null;

  @SerializedName("airsBeforeEpisode")
  private Integer airsBeforeEpisode = null;

  @SerializedName("airsBeforeSeason")
  private Integer airsBeforeSeason = null;

  @SerializedName("finaleType")
  private String finaleType = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("image")
  private String image = null;

  @SerializedName("imageType")
  private Integer imageType = null;

  @SerializedName("isMovie")
  private Long isMovie = null;

  @SerializedName("lastUpdated")
  private String lastUpdated = null;

  @SerializedName("linkedMovie")
  private Integer linkedMovie = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("nameTranslations")
  private List<String> nameTranslations = null;

  @SerializedName("number")
  private Integer number = null;

  @SerializedName("overview")
  private String overview = null;

  @SerializedName("overviewTranslations")
  private List<String> overviewTranslations = null;

  @SerializedName("runtime")
  private Integer runtime = null;

  @SerializedName("seasonNumber")
  private Integer seasonNumber = null;

  @SerializedName("seasons")
  private List<SeasonBaseRecord> seasons = null;

  @SerializedName("seriesId")
  private Long seriesId = null;

  @SerializedName("seasonName")
  private String seasonName = null;

  @SerializedName("year")
  private String year = null;

  public EpisodeBaseRecord absoluteNumber(Integer absoluteNumber) {
    this.absoluteNumber = absoluteNumber;
    return this;
  }

   /**
   * Get absoluteNumber
   * @return absoluteNumber
  **/
  @Schema(description = "")
  public Integer getAbsoluteNumber() {
    return absoluteNumber;
  }

  public void setAbsoluteNumber(Integer absoluteNumber) {
    this.absoluteNumber = absoluteNumber;
  }

  public EpisodeBaseRecord aired(String aired) {
    this.aired = aired;
    return this;
  }

   /**
   * Get aired
   * @return aired
  **/
  @Schema(description = "")
  public String getAired() {
    return aired;
  }

  public void setAired(String aired) {
    this.aired = aired;
  }

  public EpisodeBaseRecord airsAfterSeason(Integer airsAfterSeason) {
    this.airsAfterSeason = airsAfterSeason;
    return this;
  }

   /**
   * Get airsAfterSeason
   * @return airsAfterSeason
  **/
  @Schema(description = "")
  public Integer getAirsAfterSeason() {
    return airsAfterSeason;
  }

  public void setAirsAfterSeason(Integer airsAfterSeason) {
    this.airsAfterSeason = airsAfterSeason;
  }

  public EpisodeBaseRecord airsBeforeEpisode(Integer airsBeforeEpisode) {
    this.airsBeforeEpisode = airsBeforeEpisode;
    return this;
  }

   /**
   * Get airsBeforeEpisode
   * @return airsBeforeEpisode
  **/
  @Schema(description = "")
  public Integer getAirsBeforeEpisode() {
    return airsBeforeEpisode;
  }

  public void setAirsBeforeEpisode(Integer airsBeforeEpisode) {
    this.airsBeforeEpisode = airsBeforeEpisode;
  }

  public EpisodeBaseRecord airsBeforeSeason(Integer airsBeforeSeason) {
    this.airsBeforeSeason = airsBeforeSeason;
    return this;
  }

   /**
   * Get airsBeforeSeason
   * @return airsBeforeSeason
  **/
  @Schema(description = "")
  public Integer getAirsBeforeSeason() {
    return airsBeforeSeason;
  }

  public void setAirsBeforeSeason(Integer airsBeforeSeason) {
    this.airsBeforeSeason = airsBeforeSeason;
  }

  public EpisodeBaseRecord finaleType(String finaleType) {
    this.finaleType = finaleType;
    return this;
  }

   /**
   * season, midseason, or series
   * @return finaleType
  **/
  @Schema(description = "season, midseason, or series")
  public String getFinaleType() {
    return finaleType;
  }

  public void setFinaleType(String finaleType) {
    this.finaleType = finaleType;
  }

  public EpisodeBaseRecord id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public EpisodeBaseRecord image(String image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @Schema(description = "")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }

  public EpisodeBaseRecord imageType(Integer imageType) {
    this.imageType = imageType;
    return this;
  }

   /**
   * Get imageType
   * @return imageType
  **/
  @Schema(description = "")
  public Integer getImageType() {
    return imageType;
  }

  public void setImageType(Integer imageType) {
    this.imageType = imageType;
  }

  public EpisodeBaseRecord isMovie(Long isMovie) {
    this.isMovie = isMovie;
    return this;
  }

   /**
   * Get isMovie
   * @return isMovie
  **/
  @Schema(description = "")
  public Long getIsMovie() {
    return isMovie;
  }

  public void setIsMovie(Long isMovie) {
    this.isMovie = isMovie;
  }

  public EpisodeBaseRecord lastUpdated(String lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * Get lastUpdated
   * @return lastUpdated
  **/
  @Schema(description = "")
  public String getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(String lastUpdated) {
    this.lastUpdated = lastUpdated;
  }

  public EpisodeBaseRecord linkedMovie(Integer linkedMovie) {
    this.linkedMovie = linkedMovie;
    return this;
  }

   /**
   * Get linkedMovie
   * @return linkedMovie
  **/
  @Schema(description = "")
  public Integer getLinkedMovie() {
    return linkedMovie;
  }

  public void setLinkedMovie(Integer linkedMovie) {
    this.linkedMovie = linkedMovie;
  }

  public EpisodeBaseRecord name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public EpisodeBaseRecord nameTranslations(List<String> nameTranslations) {
    this.nameTranslations = nameTranslations;
    return this;
  }

  public EpisodeBaseRecord addNameTranslationsItem(String nameTranslationsItem) {
    if (this.nameTranslations == null) {
      this.nameTranslations = new ArrayList<String>();
    }
    this.nameTranslations.add(nameTranslationsItem);
    return this;
  }

   /**
   * Get nameTranslations
   * @return nameTranslations
  **/
  @Schema(description = "")
  public List<String> getNameTranslations() {
    return nameTranslations;
  }

  public void setNameTranslations(List<String> nameTranslations) {
    this.nameTranslations = nameTranslations;
  }

  public EpisodeBaseRecord number(Integer number) {
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @Schema(description = "")
  public Integer getNumber() {
    return number;
  }

  public void setNumber(Integer number) {
    this.number = number;
  }

  public EpisodeBaseRecord overview(String overview) {
    this.overview = overview;
    return this;
  }

   /**
   * Get overview
   * @return overview
  **/
  @Schema(description = "")
  public String getOverview() {
    return overview;
  }

  public void setOverview(String overview) {
    this.overview = overview;
  }

  public EpisodeBaseRecord overviewTranslations(List<String> overviewTranslations) {
    this.overviewTranslations = overviewTranslations;
    return this;
  }

  public EpisodeBaseRecord addOverviewTranslationsItem(String overviewTranslationsItem) {
    if (this.overviewTranslations == null) {
      this.overviewTranslations = new ArrayList<String>();
    }
    this.overviewTranslations.add(overviewTranslationsItem);
    return this;
  }

   /**
   * Get overviewTranslations
   * @return overviewTranslations
  **/
  @Schema(description = "")
  public List<String> getOverviewTranslations() {
    return overviewTranslations;
  }

  public void setOverviewTranslations(List<String> overviewTranslations) {
    this.overviewTranslations = overviewTranslations;
  }

  public EpisodeBaseRecord runtime(Integer runtime) {
    this.runtime = runtime;
    return this;
  }

   /**
   * Get runtime
   * @return runtime
  **/
  @Schema(description = "")
  public Integer getRuntime() {
    return runtime;
  }

  public void setRuntime(Integer runtime) {
    this.runtime = runtime;
  }

  public EpisodeBaseRecord seasonNumber(Integer seasonNumber) {
    this.seasonNumber = seasonNumber;
    return this;
  }

   /**
   * Get seasonNumber
   * @return seasonNumber
  **/
  @Schema(description = "")
  public Integer getSeasonNumber() {
    return seasonNumber;
  }

  public void setSeasonNumber(Integer seasonNumber) {
    this.seasonNumber = seasonNumber;
  }

  public EpisodeBaseRecord seasons(List<SeasonBaseRecord> seasons) {
    this.seasons = seasons;
    return this;
  }

  public EpisodeBaseRecord addSeasonsItem(SeasonBaseRecord seasonsItem) {
    if (this.seasons == null) {
      this.seasons = new ArrayList<SeasonBaseRecord>();
    }
    this.seasons.add(seasonsItem);
    return this;
  }

   /**
   * Get seasons
   * @return seasons
  **/
  @Schema(description = "")
  public List<SeasonBaseRecord> getSeasons() {
    return seasons;
  }

  public void setSeasons(List<SeasonBaseRecord> seasons) {
    this.seasons = seasons;
  }

  public EpisodeBaseRecord seriesId(Long seriesId) {
    this.seriesId = seriesId;
    return this;
  }

   /**
   * Get seriesId
   * @return seriesId
  **/
  @Schema(description = "")
  public Long getSeriesId() {
    return seriesId;
  }

  public void setSeriesId(Long seriesId) {
    this.seriesId = seriesId;
  }

  public EpisodeBaseRecord seasonName(String seasonName) {
    this.seasonName = seasonName;
    return this;
  }

   /**
   * Get seasonName
   * @return seasonName
  **/
  @Schema(description = "")
  public String getSeasonName() {
    return seasonName;
  }

  public void setSeasonName(String seasonName) {
    this.seasonName = seasonName;
  }

  public EpisodeBaseRecord year(String year) {
    this.year = year;
    return this;
  }

   /**
   * Get year
   * @return year
  **/
  @Schema(description = "")
  public String getYear() {
    return year;
  }

  public void setYear(String year) {
    this.year = year;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EpisodeBaseRecord episodeBaseRecord = (EpisodeBaseRecord) o;
    return Objects.equals(this.absoluteNumber, episodeBaseRecord.absoluteNumber) &&
        Objects.equals(this.aired, episodeBaseRecord.aired) &&
        Objects.equals(this.airsAfterSeason, episodeBaseRecord.airsAfterSeason) &&
        Objects.equals(this.airsBeforeEpisode, episodeBaseRecord.airsBeforeEpisode) &&
        Objects.equals(this.airsBeforeSeason, episodeBaseRecord.airsBeforeSeason) &&
        Objects.equals(this.finaleType, episodeBaseRecord.finaleType) &&
        Objects.equals(this.id, episodeBaseRecord.id) &&
        Objects.equals(this.image, episodeBaseRecord.image) &&
        Objects.equals(this.imageType, episodeBaseRecord.imageType) &&
        Objects.equals(this.isMovie, episodeBaseRecord.isMovie) &&
        Objects.equals(this.lastUpdated, episodeBaseRecord.lastUpdated) &&
        Objects.equals(this.linkedMovie, episodeBaseRecord.linkedMovie) &&
        Objects.equals(this.name, episodeBaseRecord.name) &&
        Objects.equals(this.nameTranslations, episodeBaseRecord.nameTranslations) &&
        Objects.equals(this.number, episodeBaseRecord.number) &&
        Objects.equals(this.overview, episodeBaseRecord.overview) &&
        Objects.equals(this.overviewTranslations, episodeBaseRecord.overviewTranslations) &&
        Objects.equals(this.runtime, episodeBaseRecord.runtime) &&
        Objects.equals(this.seasonNumber, episodeBaseRecord.seasonNumber) &&
        Objects.equals(this.seasons, episodeBaseRecord.seasons) &&
        Objects.equals(this.seriesId, episodeBaseRecord.seriesId) &&
        Objects.equals(this.seasonName, episodeBaseRecord.seasonName) &&
        Objects.equals(this.year, episodeBaseRecord.year);
  }

  @Override
  public int hashCode() {
    return Objects.hash(absoluteNumber, aired, airsAfterSeason, airsBeforeEpisode, airsBeforeSeason, finaleType, id, image, imageType, isMovie, lastUpdated, linkedMovie, name, nameTranslations, number, overview, overviewTranslations, runtime, seasonNumber, seasons, seriesId, seasonName, year);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EpisodeBaseRecord {\n");
    
    sb.append("    absoluteNumber: ").append(toIndentedString(absoluteNumber)).append("\n");
    sb.append("    aired: ").append(toIndentedString(aired)).append("\n");
    sb.append("    airsAfterSeason: ").append(toIndentedString(airsAfterSeason)).append("\n");
    sb.append("    airsBeforeEpisode: ").append(toIndentedString(airsBeforeEpisode)).append("\n");
    sb.append("    airsBeforeSeason: ").append(toIndentedString(airsBeforeSeason)).append("\n");
    sb.append("    finaleType: ").append(toIndentedString(finaleType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    imageType: ").append(toIndentedString(imageType)).append("\n");
    sb.append("    isMovie: ").append(toIndentedString(isMovie)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    linkedMovie: ").append(toIndentedString(linkedMovie)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameTranslations: ").append(toIndentedString(nameTranslations)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    overview: ").append(toIndentedString(overview)).append("\n");
    sb.append("    overviewTranslations: ").append(toIndentedString(overviewTranslations)).append("\n");
    sb.append("    runtime: ").append(toIndentedString(runtime)).append("\n");
    sb.append("    seasonNumber: ").append(toIndentedString(seasonNumber)).append("\n");
    sb.append("    seasons: ").append(toIndentedString(seasons)).append("\n");
    sb.append("    seriesId: ").append(toIndentedString(seriesId)).append("\n");
    sb.append("    seasonName: ").append(toIndentedString(seasonName)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
