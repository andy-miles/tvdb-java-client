/*
 * TVDB API V4
 * Documentation of [TheTVDB](https://thetvdb.com/) API V4. All related information is linked from our [Github repo](https://github.com/thetvdb/v4-api). You might also want to use our [Postman collection] (https://www.getpostman.com/collections/7a9397ce69ff246f74d0) ## Authentication 1. Use the /login endpoint and provide your API key as \"apikey\". If you have a user-supported key, also provide your subscriber PIN as \"pin\". Otherwise completely remove \"pin\" from your call. 2. Executing this call will provide you with a bearer token, which is valid for 1 month. 3. Provide your bearer token for subsequent API calls by clicking Authorize below or including in the header of all direct API calls: `Authorization: Bearer [your-token]`  ## Notes 1. \"score\" is a field across almost all entities.  We generate scores for different types of entities in various ways, so no assumptions should be made about the meaning of this value.  It is simply used to hint at relative popularity for sorting purposes. 
 *
 * OpenAPI spec version: 4.7.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amilesend.tvdb.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Favorites record
 */
@Schema(description = "Favorites record")


public class FavoriteRecord {
  @SerializedName("series")
  private Integer series = null;

  @SerializedName("movie")
  private Integer movie = null;

  @SerializedName("episode")
  private Integer episode = null;

  @SerializedName("artwork")
  private Integer artwork = null;

  @SerializedName("people")
  private Integer people = null;

  @SerializedName("list")
  private Integer list = null;

  public FavoriteRecord series(Integer series) {
    this.series = series;
    return this;
  }

   /**
   * Get series
   * @return series
  **/
  @Schema(description = "")
  public Integer getSeries() {
    return series;
  }

  public void setSeries(Integer series) {
    this.series = series;
  }

  public FavoriteRecord movie(Integer movie) {
    this.movie = movie;
    return this;
  }

   /**
   * Get movie
   * @return movie
  **/
  @Schema(description = "")
  public Integer getMovie() {
    return movie;
  }

  public void setMovie(Integer movie) {
    this.movie = movie;
  }

  public FavoriteRecord episode(Integer episode) {
    this.episode = episode;
    return this;
  }

   /**
   * Get episode
   * @return episode
  **/
  @Schema(description = "")
  public Integer getEpisode() {
    return episode;
  }

  public void setEpisode(Integer episode) {
    this.episode = episode;
  }

  public FavoriteRecord artwork(Integer artwork) {
    this.artwork = artwork;
    return this;
  }

   /**
   * Get artwork
   * @return artwork
  **/
  @Schema(description = "")
  public Integer getArtwork() {
    return artwork;
  }

  public void setArtwork(Integer artwork) {
    this.artwork = artwork;
  }

  public FavoriteRecord people(Integer people) {
    this.people = people;
    return this;
  }

   /**
   * Get people
   * @return people
  **/
  @Schema(description = "")
  public Integer getPeople() {
    return people;
  }

  public void setPeople(Integer people) {
    this.people = people;
  }

  public FavoriteRecord list(Integer list) {
    this.list = list;
    return this;
  }

   /**
   * Get list
   * @return list
  **/
  @Schema(description = "")
  public Integer getList() {
    return list;
  }

  public void setList(Integer list) {
    this.list = list;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FavoriteRecord favoriteRecord = (FavoriteRecord) o;
    return Objects.equals(this.series, favoriteRecord.series) &&
        Objects.equals(this.movie, favoriteRecord.movie) &&
        Objects.equals(this.episode, favoriteRecord.episode) &&
        Objects.equals(this.artwork, favoriteRecord.artwork) &&
        Objects.equals(this.people, favoriteRecord.people) &&
        Objects.equals(this.list, favoriteRecord.list);
  }

  @Override
  public int hashCode() {
    return Objects.hash(series, movie, episode, artwork, people, list);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FavoriteRecord {\n");
    
    sb.append("    series: ").append(toIndentedString(series)).append("\n");
    sb.append("    movie: ").append(toIndentedString(movie)).append("\n");
    sb.append("    episode: ").append(toIndentedString(episode)).append("\n");
    sb.append("    artwork: ").append(toIndentedString(artwork)).append("\n");
    sb.append("    people: ").append(toIndentedString(people)).append("\n");
    sb.append("    list: ").append(toIndentedString(list)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
