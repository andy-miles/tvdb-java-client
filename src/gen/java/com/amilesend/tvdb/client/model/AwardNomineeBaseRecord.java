/*
 * TVDB API V4
 * Documentation of [TheTVDB](https://thetvdb.com/) API V4. All related information is linked from our [Github repo](https://github.com/thetvdb/v4-api). You might also want to use our [Postman collection] (https://www.getpostman.com/collections/7a9397ce69ff246f74d0) ## Authentication 1. Use the /login endpoint and provide your API key as \"apikey\". If you have a user-supported key, also provide your subscriber PIN as \"pin\". Otherwise completely remove \"pin\" from your call. 2. Executing this call will provide you with a bearer token, which is valid for 1 month. 3. Provide your bearer token for subsequent API calls by clicking Authorize below or including in the header of all direct API calls: `Authorization: Bearer [your-token]`  ## Notes 1. \"score\" is a field across almost all entities.  We generate scores for different types of entities in various ways, so no assumptions should be made about the meaning of this value.  It is simply used to hint at relative popularity for sorting purposes. 
 *
 * OpenAPI spec version: 4.7.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amilesend.tvdb.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.amilesend.tvdb.client.model.Character;
import com.amilesend.tvdb.client.model.EpisodeBaseRecord;
import com.amilesend.tvdb.client.model.MovieBaseRecord;
import com.amilesend.tvdb.client.model.SeriesBaseRecord;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * base award nominee record
 */
@Schema(description = "base award nominee record")


public class AwardNomineeBaseRecord {
  @SerializedName("character")
  private Character character = null;

  @SerializedName("details")
  private String details = null;

  @SerializedName("episode")
  private EpisodeBaseRecord episode = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("isWinner")
  private Boolean isWinner = null;

  @SerializedName("movie")
  private MovieBaseRecord movie = null;

  @SerializedName("series")
  private SeriesBaseRecord series = null;

  @SerializedName("year")
  private String year = null;

  @SerializedName("category")
  private String category = null;

  @SerializedName("name")
  private String name = null;

  public AwardNomineeBaseRecord character(Character character) {
    this.character = character;
    return this;
  }

   /**
   * Get character
   * @return character
  **/
  @Schema(description = "")
  public Character getCharacter() {
    return character;
  }

  public void setCharacter(Character character) {
    this.character = character;
  }

  public AwardNomineeBaseRecord details(String details) {
    this.details = details;
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @Schema(description = "")
  public String getDetails() {
    return details;
  }

  public void setDetails(String details) {
    this.details = details;
  }

  public AwardNomineeBaseRecord episode(EpisodeBaseRecord episode) {
    this.episode = episode;
    return this;
  }

   /**
   * Get episode
   * @return episode
  **/
  @Schema(description = "")
  public EpisodeBaseRecord getEpisode() {
    return episode;
  }

  public void setEpisode(EpisodeBaseRecord episode) {
    this.episode = episode;
  }

  public AwardNomineeBaseRecord id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public AwardNomineeBaseRecord isWinner(Boolean isWinner) {
    this.isWinner = isWinner;
    return this;
  }

   /**
   * Get isWinner
   * @return isWinner
  **/
  @Schema(description = "")
  public Boolean isIsWinner() {
    return isWinner;
  }

  public void setIsWinner(Boolean isWinner) {
    this.isWinner = isWinner;
  }

  public AwardNomineeBaseRecord movie(MovieBaseRecord movie) {
    this.movie = movie;
    return this;
  }

   /**
   * Get movie
   * @return movie
  **/
  @Schema(description = "")
  public MovieBaseRecord getMovie() {
    return movie;
  }

  public void setMovie(MovieBaseRecord movie) {
    this.movie = movie;
  }

  public AwardNomineeBaseRecord series(SeriesBaseRecord series) {
    this.series = series;
    return this;
  }

   /**
   * Get series
   * @return series
  **/
  @Schema(description = "")
  public SeriesBaseRecord getSeries() {
    return series;
  }

  public void setSeries(SeriesBaseRecord series) {
    this.series = series;
  }

  public AwardNomineeBaseRecord year(String year) {
    this.year = year;
    return this;
  }

   /**
   * Get year
   * @return year
  **/
  @Schema(description = "")
  public String getYear() {
    return year;
  }

  public void setYear(String year) {
    this.year = year;
  }

  public AwardNomineeBaseRecord category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @Schema(description = "")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public AwardNomineeBaseRecord name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AwardNomineeBaseRecord awardNomineeBaseRecord = (AwardNomineeBaseRecord) o;
    return Objects.equals(this.character, awardNomineeBaseRecord.character) &&
        Objects.equals(this.details, awardNomineeBaseRecord.details) &&
        Objects.equals(this.episode, awardNomineeBaseRecord.episode) &&
        Objects.equals(this.id, awardNomineeBaseRecord.id) &&
        Objects.equals(this.isWinner, awardNomineeBaseRecord.isWinner) &&
        Objects.equals(this.movie, awardNomineeBaseRecord.movie) &&
        Objects.equals(this.series, awardNomineeBaseRecord.series) &&
        Objects.equals(this.year, awardNomineeBaseRecord.year) &&
        Objects.equals(this.category, awardNomineeBaseRecord.category) &&
        Objects.equals(this.name, awardNomineeBaseRecord.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(character, details, episode, id, isWinner, movie, series, year, category, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AwardNomineeBaseRecord {\n");
    
    sb.append("    character: ").append(toIndentedString(character)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    episode: ").append(toIndentedString(episode)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isWinner: ").append(toIndentedString(isWinner)).append("\n");
    sb.append("    movie: ").append(toIndentedString(movie)).append("\n");
    sb.append("    series: ").append(toIndentedString(series)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
