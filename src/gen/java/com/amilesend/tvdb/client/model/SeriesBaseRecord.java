/*
 * TVDB API V4
 * Documentation of [TheTVDB](https://thetvdb.com/) API V4. All related information is linked from our [Github repo](https://github.com/thetvdb/v4-api). You might also want to use our [Postman collection] (https://www.getpostman.com/collections/7a9397ce69ff246f74d0) ## Authentication 1. Use the /login endpoint and provide your API key as \"apikey\". If you have a user-supported key, also provide your subscriber PIN as \"pin\". Otherwise completely remove \"pin\" from your call. 2. Executing this call will provide you with a bearer token, which is valid for 1 month. 3. Provide your bearer token for subsequent API calls by clicking Authorize below or including in the header of all direct API calls: `Authorization: Bearer [your-token]`  ## Notes 1. \"score\" is a field across almost all entities.  We generate scores for different types of entities in various ways, so no assumptions should be made about the meaning of this value.  It is simply used to hint at relative popularity for sorting purposes. 
 *
 * OpenAPI spec version: 4.7.10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.amilesend.tvdb.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.amilesend.tvdb.client.model.Alias;
import com.amilesend.tvdb.client.model.EpisodeBaseRecord;
import com.amilesend.tvdb.client.model.Status;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * The base record for a series. All series airs time like firstAired, lastAired, nextAired, etc. are in US EST for US series, and for all non-US series, the time of the show’s country capital or most populous city. For streaming services, is the official release time. See https://support.thetvdb.com/kb/faq.php?id&#x3D;29.
 */
@Schema(description = "The base record for a series. All series airs time like firstAired, lastAired, nextAired, etc. are in US EST for US series, and for all non-US series, the time of the show’s country capital or most populous city. For streaming services, is the official release time. See https://support.thetvdb.com/kb/faq.php?id=29.")


public class SeriesBaseRecord {
  @SerializedName("aliases")
  private List<Alias> aliases = null;

  @SerializedName("averageRuntime")
  private Integer averageRuntime = null;

  @SerializedName("country")
  private String country = null;

  @SerializedName("defaultSeasonType")
  private Long defaultSeasonType = null;

  @SerializedName("episodes")
  private List<EpisodeBaseRecord> episodes = null;

  @SerializedName("firstAired")
  private String firstAired = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("image")
  private String image = null;

  @SerializedName("isOrderRandomized")
  private Boolean isOrderRandomized = null;

  @SerializedName("lastAired")
  private String lastAired = null;

  @SerializedName("lastUpdated")
  private String lastUpdated = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("nameTranslations")
  private List<String> nameTranslations = null;

  @SerializedName("nextAired")
  private String nextAired = null;

  @SerializedName("originalCountry")
  private String originalCountry = null;

  @SerializedName("originalLanguage")
  private String originalLanguage = null;

  @SerializedName("overviewTranslations")
  private List<String> overviewTranslations = null;

  @SerializedName("score")
  private Double score = null;

  @SerializedName("slug")
  private String slug = null;

  @SerializedName("status")
  private Status status = null;

  @SerializedName("year")
  private String year = null;

  public SeriesBaseRecord aliases(List<Alias> aliases) {
    this.aliases = aliases;
    return this;
  }

  public SeriesBaseRecord addAliasesItem(Alias aliasesItem) {
    if (this.aliases == null) {
      this.aliases = new ArrayList<Alias>();
    }
    this.aliases.add(aliasesItem);
    return this;
  }

   /**
   * Get aliases
   * @return aliases
  **/
  @Schema(description = "")
  public List<Alias> getAliases() {
    return aliases;
  }

  public void setAliases(List<Alias> aliases) {
    this.aliases = aliases;
  }

  public SeriesBaseRecord averageRuntime(Integer averageRuntime) {
    this.averageRuntime = averageRuntime;
    return this;
  }

   /**
   * Get averageRuntime
   * @return averageRuntime
  **/
  @Schema(description = "")
  public Integer getAverageRuntime() {
    return averageRuntime;
  }

  public void setAverageRuntime(Integer averageRuntime) {
    this.averageRuntime = averageRuntime;
  }

  public SeriesBaseRecord country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @Schema(description = "")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public SeriesBaseRecord defaultSeasonType(Long defaultSeasonType) {
    this.defaultSeasonType = defaultSeasonType;
    return this;
  }

   /**
   * Get defaultSeasonType
   * @return defaultSeasonType
  **/
  @Schema(description = "")
  public Long getDefaultSeasonType() {
    return defaultSeasonType;
  }

  public void setDefaultSeasonType(Long defaultSeasonType) {
    this.defaultSeasonType = defaultSeasonType;
  }

  public SeriesBaseRecord episodes(List<EpisodeBaseRecord> episodes) {
    this.episodes = episodes;
    return this;
  }

  public SeriesBaseRecord addEpisodesItem(EpisodeBaseRecord episodesItem) {
    if (this.episodes == null) {
      this.episodes = new ArrayList<EpisodeBaseRecord>();
    }
    this.episodes.add(episodesItem);
    return this;
  }

   /**
   * Get episodes
   * @return episodes
  **/
  @Schema(description = "")
  public List<EpisodeBaseRecord> getEpisodes() {
    return episodes;
  }

  public void setEpisodes(List<EpisodeBaseRecord> episodes) {
    this.episodes = episodes;
  }

  public SeriesBaseRecord firstAired(String firstAired) {
    this.firstAired = firstAired;
    return this;
  }

   /**
   * Get firstAired
   * @return firstAired
  **/
  @Schema(description = "")
  public String getFirstAired() {
    return firstAired;
  }

  public void setFirstAired(String firstAired) {
    this.firstAired = firstAired;
  }

  public SeriesBaseRecord id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public SeriesBaseRecord image(String image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @Schema(description = "")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }

  public SeriesBaseRecord isOrderRandomized(Boolean isOrderRandomized) {
    this.isOrderRandomized = isOrderRandomized;
    return this;
  }

   /**
   * Get isOrderRandomized
   * @return isOrderRandomized
  **/
  @Schema(description = "")
  public Boolean isIsOrderRandomized() {
    return isOrderRandomized;
  }

  public void setIsOrderRandomized(Boolean isOrderRandomized) {
    this.isOrderRandomized = isOrderRandomized;
  }

  public SeriesBaseRecord lastAired(String lastAired) {
    this.lastAired = lastAired;
    return this;
  }

   /**
   * Get lastAired
   * @return lastAired
  **/
  @Schema(description = "")
  public String getLastAired() {
    return lastAired;
  }

  public void setLastAired(String lastAired) {
    this.lastAired = lastAired;
  }

  public SeriesBaseRecord lastUpdated(String lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * Get lastUpdated
   * @return lastUpdated
  **/
  @Schema(description = "")
  public String getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(String lastUpdated) {
    this.lastUpdated = lastUpdated;
  }

  public SeriesBaseRecord name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SeriesBaseRecord nameTranslations(List<String> nameTranslations) {
    this.nameTranslations = nameTranslations;
    return this;
  }

  public SeriesBaseRecord addNameTranslationsItem(String nameTranslationsItem) {
    if (this.nameTranslations == null) {
      this.nameTranslations = new ArrayList<String>();
    }
    this.nameTranslations.add(nameTranslationsItem);
    return this;
  }

   /**
   * Get nameTranslations
   * @return nameTranslations
  **/
  @Schema(description = "")
  public List<String> getNameTranslations() {
    return nameTranslations;
  }

  public void setNameTranslations(List<String> nameTranslations) {
    this.nameTranslations = nameTranslations;
  }

  public SeriesBaseRecord nextAired(String nextAired) {
    this.nextAired = nextAired;
    return this;
  }

   /**
   * Get nextAired
   * @return nextAired
  **/
  @Schema(description = "")
  public String getNextAired() {
    return nextAired;
  }

  public void setNextAired(String nextAired) {
    this.nextAired = nextAired;
  }

  public SeriesBaseRecord originalCountry(String originalCountry) {
    this.originalCountry = originalCountry;
    return this;
  }

   /**
   * Get originalCountry
   * @return originalCountry
  **/
  @Schema(description = "")
  public String getOriginalCountry() {
    return originalCountry;
  }

  public void setOriginalCountry(String originalCountry) {
    this.originalCountry = originalCountry;
  }

  public SeriesBaseRecord originalLanguage(String originalLanguage) {
    this.originalLanguage = originalLanguage;
    return this;
  }

   /**
   * Get originalLanguage
   * @return originalLanguage
  **/
  @Schema(description = "")
  public String getOriginalLanguage() {
    return originalLanguage;
  }

  public void setOriginalLanguage(String originalLanguage) {
    this.originalLanguage = originalLanguage;
  }

  public SeriesBaseRecord overviewTranslations(List<String> overviewTranslations) {
    this.overviewTranslations = overviewTranslations;
    return this;
  }

  public SeriesBaseRecord addOverviewTranslationsItem(String overviewTranslationsItem) {
    if (this.overviewTranslations == null) {
      this.overviewTranslations = new ArrayList<String>();
    }
    this.overviewTranslations.add(overviewTranslationsItem);
    return this;
  }

   /**
   * Get overviewTranslations
   * @return overviewTranslations
  **/
  @Schema(description = "")
  public List<String> getOverviewTranslations() {
    return overviewTranslations;
  }

  public void setOverviewTranslations(List<String> overviewTranslations) {
    this.overviewTranslations = overviewTranslations;
  }

  public SeriesBaseRecord score(Double score) {
    this.score = score;
    return this;
  }

   /**
   * Get score
   * @return score
  **/
  @Schema(description = "")
  public Double getScore() {
    return score;
  }

  public void setScore(Double score) {
    this.score = score;
  }

  public SeriesBaseRecord slug(String slug) {
    this.slug = slug;
    return this;
  }

   /**
   * Get slug
   * @return slug
  **/
  @Schema(description = "")
  public String getSlug() {
    return slug;
  }

  public void setSlug(String slug) {
    this.slug = slug;
  }

  public SeriesBaseRecord status(Status status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public Status getStatus() {
    return status;
  }

  public void setStatus(Status status) {
    this.status = status;
  }

  public SeriesBaseRecord year(String year) {
    this.year = year;
    return this;
  }

   /**
   * Get year
   * @return year
  **/
  @Schema(description = "")
  public String getYear() {
    return year;
  }

  public void setYear(String year) {
    this.year = year;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SeriesBaseRecord seriesBaseRecord = (SeriesBaseRecord) o;
    return Objects.equals(this.aliases, seriesBaseRecord.aliases) &&
        Objects.equals(this.averageRuntime, seriesBaseRecord.averageRuntime) &&
        Objects.equals(this.country, seriesBaseRecord.country) &&
        Objects.equals(this.defaultSeasonType, seriesBaseRecord.defaultSeasonType) &&
        Objects.equals(this.episodes, seriesBaseRecord.episodes) &&
        Objects.equals(this.firstAired, seriesBaseRecord.firstAired) &&
        Objects.equals(this.id, seriesBaseRecord.id) &&
        Objects.equals(this.image, seriesBaseRecord.image) &&
        Objects.equals(this.isOrderRandomized, seriesBaseRecord.isOrderRandomized) &&
        Objects.equals(this.lastAired, seriesBaseRecord.lastAired) &&
        Objects.equals(this.lastUpdated, seriesBaseRecord.lastUpdated) &&
        Objects.equals(this.name, seriesBaseRecord.name) &&
        Objects.equals(this.nameTranslations, seriesBaseRecord.nameTranslations) &&
        Objects.equals(this.nextAired, seriesBaseRecord.nextAired) &&
        Objects.equals(this.originalCountry, seriesBaseRecord.originalCountry) &&
        Objects.equals(this.originalLanguage, seriesBaseRecord.originalLanguage) &&
        Objects.equals(this.overviewTranslations, seriesBaseRecord.overviewTranslations) &&
        Objects.equals(this.score, seriesBaseRecord.score) &&
        Objects.equals(this.slug, seriesBaseRecord.slug) &&
        Objects.equals(this.status, seriesBaseRecord.status) &&
        Objects.equals(this.year, seriesBaseRecord.year);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aliases, averageRuntime, country, defaultSeasonType, episodes, firstAired, id, image, isOrderRandomized, lastAired, lastUpdated, name, nameTranslations, nextAired, originalCountry, originalLanguage, overviewTranslations, score, slug, status, year);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SeriesBaseRecord {\n");
    
    sb.append("    aliases: ").append(toIndentedString(aliases)).append("\n");
    sb.append("    averageRuntime: ").append(toIndentedString(averageRuntime)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    defaultSeasonType: ").append(toIndentedString(defaultSeasonType)).append("\n");
    sb.append("    episodes: ").append(toIndentedString(episodes)).append("\n");
    sb.append("    firstAired: ").append(toIndentedString(firstAired)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    isOrderRandomized: ").append(toIndentedString(isOrderRandomized)).append("\n");
    sb.append("    lastAired: ").append(toIndentedString(lastAired)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameTranslations: ").append(toIndentedString(nameTranslations)).append("\n");
    sb.append("    nextAired: ").append(toIndentedString(nextAired)).append("\n");
    sb.append("    originalCountry: ").append(toIndentedString(originalCountry)).append("\n");
    sb.append("    originalLanguage: ").append(toIndentedString(originalLanguage)).append("\n");
    sb.append("    overviewTranslations: ").append(toIndentedString(overviewTranslations)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
